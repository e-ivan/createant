<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qnyy.re.business.mapper.ReItemMapper">
    <resultMap id="BaseResultMap" type="com.qnyy.re.business.entity.ReItem">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="re_id" property="reId" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="draw_time" property="drawTime" jdbcType="TIMESTAMP"/>
        <result column="amount" property="amount" jdbcType="DECIMAL"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="head_url" property="headUrl" jdbcType="VARCHAR"/>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    insert into `re_item` (re_id, uid, state, draw_time, amount,`type`,location)
    values (#{reId,jdbcType=BIGINT}, #{uid,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{drawTime,jdbcType=TIMESTAMP},
    #{amount,jdbcType=DECIMAL},#{type},POINT(#{lng},#{lat}))
  </insert>
    <insert id="insertBatch">
        INSERT INTO `re_item` (re_id, uid, state, draw_time, amount,`type`)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.reId},#{item.uid},#{item.state},#{item.drawTime},#{item.amount},#{item.type})
        </foreach>
    </insert>
    <update id="updateByPrimaryKey">
    update `re_item`
    set re_id = #{reId,jdbcType=BIGINT},
      uid = #{uid,jdbcType=BIGINT},
      state = #{state,jdbcType=INTEGER},
      draw_time = #{drawTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DECIMAL},
      location = POINT(#{lng},#{lat}),
      version = version + 1
    where id = #{id,jdbcType=BIGINT} AND version = #{version}
    </update>
    <sql id="base_column">
    r.id, r.re_id, r.uid, r.state,r.draw_time, r.amount, ASTEXT(r.location) AS location,r.version
    <if test="orderBy != null">
        ,i.nickname,i.head_url
    </if>
    </sql>
    <sql id="base_where">
        <where>
            <if test="reId != null">
                AND r.re_id = #{reId}
            </if>
            <if test="reIds != null">
                AND r.re_id IN
                <foreach collection="reIds" open="(" close=")" item="reId" separator=",">
                    #{reId}
                </foreach>
            </if>
            <if test="state >= 0">
                AND r.state = #{state}
            </if>
            <if test="uid >= 0">
                AND r.uid = #{uid}
            </if>
            <if test="type >= 0">
                AND r.type = #{type}
            </if>
        </where>
    </sql>
    <sql id="base_table">
        `re_item` r
        <if test="orderBy != null">
            LEFT JOIN user_info i ON(r.uid = i.uid)
        </if>
    </sql>
    <select id="selectOnUserAndRe" resultMap="BaseResultMap">
        SELECT
        <include refid="base_column"/>
        FROM `re_item` r
        <include refid="base_where"/>
        LIMIT 0,1
    </select>
    <select id="query" resultMap="BaseResultMap">
        SELECT
        <include refid="base_column"/>
        FROM
        <include refid="base_table"/>
        <include refid="base_where"/>
        <if test="groupBy != null">
            GROUP BY ${groupBy}
        </if>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        LIMIT #{start},#{pageSize}
    </select>
    <select id="queryCount" resultType="java.lang.Integer">
        SELECT COUNT(r.id) FROM `re_item` r <include refid="base_where"/>
    </select>
    <select id="select2User" resultMap="com.qnyy.re.base.mapper.UserInfoMapper.BaseResultMap">
        SELECT
        <include refid="com.qnyy.re.base.mapper.UserInfoMapper.base_column"/>
        FROM `re_item` r LEFT JOIN user_info i ON(r.uid = i.uid)
        WHERE r.re_id = #{id} AND r.state = 1 ORDER BY r.draw_time DESC LIMIT 0,8
    </select>
</mapper>